I"¸<h1 id="introducci√≥n">Introducci√≥n</h1>

<p>El $\lambda $-c√°lculo es una colecci√≥n de sistemas formales basadas en una notaci√≥n inventada por Alonzo Church en 1930. Se trata de operadores o funciones que pueden ser combinadas por otros operadores.</p>

<p>Por ejemplo, supon estas funciones.</p>

<p>\(f(x) = x - y\)
\(g(y) = x - y\)
\(f: x \to = x - y\)
\(g: y \to = x - y\)</p>

<p>Estas funciones se escriben de diferente forma, pero, en realidad, representan lo mismo. Se escriben diferente, pero el resultado es el mismo. Church introdujo $\lambda $ como s√≠mbolo auxiliar.</p>

<p>\(f = \lambda x.x - y\)
\(g = \lambda y.x - y\)</p>

<p>Por ejemplo, considera las siguientes ecuaciones.</p>

<p>\(f(0) = 0 - y\)
\(f(1) = 1 - y\)</p>

<p>En la $\lambda $-notaci√≥n ser√≠a lo siguiente.</p>

<p>\((\lambda x.x - y)(0) = 0 - y\)
\((\lambda x.x - y)(1) = 1 - y\)</p>

<p>Estas ecuaciones son m√°s torpes que las originales, sin embargo, la intenci√≥n de la $\lambda $-notaci√≥n denota funciones de alto nivel; no solamente funciones de n√∫meros. Esto tiene una ayuda fundamental en la programaci√≥n funcional.</p>

<p><strong>Definici√≥n 1.1 ($\lambda $-t√©rminos)</strong> Asumiendo que dados una secuencia infinita de expresiones</p>

\[v_0, v_{00}, v_{000},...\]

<p>llamadas <em>variables</em>, y una secuencia finita, infinita o vac√≠a de expresiones llamadas <em>constantes at√≥micas</em> diferentes de las variables.</p>

<p>Cuando una secuencia de constantes at√≥micas es vac√≠a, el sistema recibe el nombre de <em>puro</em>, en caso contrario, <em>aplicado</em>.
El conjunto de expresiones llamada $\lambda $-t√©rminos se define inductivamente como sigue.</p>

<ul>
  <li>todas las variables y constantes at√≥micas son $\lambda $-t√©rminos, llamados √°tomos.</li>
  <li>si M y N son $\lambda $-t√©rminos, entonces (MN) es un $\lambda $-t√©rmino, llamada aplicaci√≥n.</li>
  <li>si M es cualquier $\lambda $-t√©rmino y x es cualquier variable, entonces ($\lambda x.M$) es un $\lambda $-t√©rmino, llamada abstracci√≥n.</li>
</ul>
:ET